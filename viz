#!python
import sys
import os
from PIL import Image
import argparse
import numpy as np

#######################
### Parse arguments ###
#######################
parser = argparse.ArgumentParser(
  prog = 'Viz',
  description = 'Visualize data',
  epilog="""Example:
echo "1,2,3,4" | viz --input-format csv --output-format png --width 2 --height 2 --encoding scalar > out.png
"""
)
parser.add_argument(
  '--input-format',
  type=str,
  help='Input Format (not implemented)',
  required=True,
  choices=['csv'],
)
parser.add_argument(
  '--output-format',
  type=str,
  help='Output type (not implemented)',
  required=True,
  choices=['png', 'gif'],
)
parser.add_argument(
  '--width',
  type=int,
  required=True,
  help='Width (not implemented)',
)
parser.add_argument(
  '--height',
  type=int,
  required=True,
  help='Height (not implemented)',
)
parser.add_argument(
  '--encoding',
  type=str,
  help='Color (not implemented)',
  choices=['scalar', 'rgb', 'rgba'],
)
parser.add_argument(
  '--frame-rate',
  type=int,
  default=100,
  help='Frame rate (not implemented)',
  required=False,
)



#######################
######## Util #########
#######################

"""
Parse a csv file
"""
def parse_csv(data):
  vals = data.strip().split(',')
  # TODO: Handle when input is not a number
  return np.array(vals, dtype=float)

"""
Convert a matrix to an image
"""
def data_to_png(data, width, height, encoding):
  # TODO: Handle when width * height != len(data)
  if encoding != 'scalar':
    Exception('Not implemented')
  low = np.min(data)
  high = np.max(data)
  normalized = (data - low) / (high - low)
  return Image.fromarray(
    np.array(normalized * 255, dtype=np.uint8).reshape((height, width)),
    mode='L'
  )

"""
Convert a 3D matrix to a gif
"""
def data_to_gif(data):
  Exception('Not implemented')

if __name__ == '__main__':
  args = parser.parse_args()
  data = sys.stdin.read()
  vals = parse_csv(data)
  if args.output_format == 'png':
    png = data_to_png(vals, width=args.width, height=args.height, encoding=args.encoding)
    png.save(sys.stdout, 'png')

  elif args.output_format == 'gif':
    Exception('Not implemented')